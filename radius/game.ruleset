
[datafile]
description             = "Radius ruleset"
options                 = "+Freeciv-2.6-ruleset"

[about]
name                    = _("Radius ruleset")
version                 = "2017.07.11"
description             = *radius/README.radius*
summary                 = _("\
 The radius ruleset is based on the classic Freeciv rules \n\
 adopting many ideas from the experimental and civ2civ3 \n\
 rulesets.  It features a growing city radius_sq from 4 \n\
 to 20: \n\n\
    size   radius (sq.)   vision  squares (hexes) \n\
       1    4 = 2*2 + 0*0      5       13 (19) \n\
       4    5 = 2*2 + 1*1      8       21 (19) \n\
       9    8 = 2*2 + 2*2      9       25 (19) \n\
      16    9 = 3*3 + 0*0     10       29 (37) \n\
      25   10 = 3*3 + 1*1     13       37 (37) \n\
      36   13 = 3*3 + 2*2     16       45 (37) \n\
      49   16 = 4*4 + 0*0     17       49 (61) \n\
      64   17 = 4*4 + 1*1     18       57 (61) \n\
      81   18 = 3*3 + 3*3     20       61 (61) \n\
     100   20 = 4*4 + 2*2     25       69 (61) \n\
")

[ruledit]
; description_file        = "x/y.z" for an about.description = *x/y.z*
description_file        = "radius/README.radius"

[options]
global_init_techs       = "Civilization"
global_init_buildings   = ""            ; important, no initial Palace

[civstyle]
base_pollution          = -20           ; added to city pollution
happy_cost              = 2             ; luxuries to make one happier
food_cost               = 2             ; food to upkeep one citizen

granary_food_ini        = 20            ; x[size] up to size = ini, else
granary_food_inc        = 10            ; x[ini ] + inc * (size - ini)

min_city_center_food    = 1
min_city_center_shield  = 1
min_city_center_trade   = 0

init_city_radius_sq     = 4             ; base for [effect_city_radius_0]
init_vis_radius_sq      = 4             ; reset in [effect_city_vision]

base_bribe_cost         = 750           ; unit bribe cost factor
ransom_gold             = 100           ; for killed lone leader

upgrade_veteran_loss    = 0             ; \/ lost veteran levels
autoupgrade_veteran_loss= 0             ; /\ (classic: 0)

pillage_select          = TRUE          ; FALSE: random, TRUE: select
civil_war_enabled       = TRUE          ; FALSE: no civil war at all

; Comma separated list of things to happen, in addition to death
; of owner, when gameloss unit dies
; "CivilWar"   - Part of the empire remains, controlled by a new player
; "Barbarians" - Depending on if there`s also "CivilWar", all or part
;                or half of the dead players empire gets under barbarian
;                control.
; "Loot"       - Player who killed the gameloss unit gets loot:
;                Partial map, gold, techs, cities
gameloss_style          = "CivilWar", "Barbarians", "Loot"

paradrop_to_transport   = TRUE          ; FALSE: cannot paradrop to transport
gold_upkeep_style       = "City"        ; "City", "Mixed", "Nation" was 0, 1, 2

tech_steal_allow_holes  = TRUE          ; \/ TRUE: respect prerequisites
tech_trade_allow_holes  = FALSE         ; /\ FALSE: ignore prerequisites
tech_trade_loss_allow_holes     = FALSE ; (2.6 civ2civ3: all FALSE)
tech_parasite_allow_holes       = FALSE ; (experimental: all TRUE)
tech_loss_allow_holes           = FALSE ; (radius: only stealing allowed)

[illness]
illness_on              = FALSE
illness_base_factor     = 25            ; percent
illness_min_size        = 3             ; minimum city size for illness
illness_trade_infection = 50            ; % increase via trade route
illness_pollution_factor= 50            ; % increase caused by pollution

[incite_cost]
; netto = base + (building costs) * I_factor + (unit costs) * U_factor
; total = netto * (city size) / (distance to capital) * T_factor / 100
base_incite_cost        = 1000
improvement_factor      = 1              ; add 1 * cost of improvements
unit_factor             = 2              ; add 2 * cost of units
total_factor            = 100

[global_unit_options]
slow_invasions          = TRUE           ; disembark costs all move points

[combat_rules]
; If tired_attack is set to TRUE, units that attack with less than a single
; move point (per move_fragments in terrain.ruleset) will have their attack
; power reduced accordingly. For instance, if move_fragments=3, a unit with
; 2/3 move points will have attack power 2/3 of normal.
; If this is set to FALSE units will attack with full strength even if they
; have only fractional moves left.
tired_attack            = FALSE

*include "radius/game_actions.ruleset"
*include "radius/game_culture.ruleset"

[borders]
; Initial city border radius + unclear effect depending on the city size
radius_sq_city          = 8             ; classic: 17, civ2civ3: 5
size_effect             = 2             ; classic: 1
radius_sq_city_permanent = 0

[research]
; Method of calculating technology costs (was 0,1,2,3,4 in 2.5)
;   "Civ I|II"      - Civ (I|II) style. Every new tech add base_tech_cost to
;                     cost of next tech.
;   "Classic"       - Cost of technology is:
;                       base_tech_cost * (1 + reqs) * sqrt(1 + reqs) / 2
;                     where reqs == number of requirement for tech, counted
;                     recursively.
;   "Classic+"      - Cost are read from tech.ruleset. Missing costs are
;                     generated by style "Classic".
;   "Experimental"  - Cost of technology is:
;                       base_tech_cost * (reqs^2 / (1 + sqrt(sqrt(reqs + 1)))
;                                         - 0.5)
;                     where reqs == number of requirement for tech, counted
;                     recursively.
;   "Experimental+" - Cost are read from tech.ruleset. Missing costs are
;                     generated by style "Experimental".
tech_cost_style         = "Experimental"
base_tech_cost          = 20

; Technology leak from other civilizations (was 0,1,2 in 2.5)
; "None"           - No reduction of the technology cost.
; "Embassies"      - Technology cost is reduced depending on the number of
;                    players which already know the tech and you have an
;                    embassy with.
; "All Players"    - Technology cost is reduced depending on the number of
;                    all players (human, AI and barbarians) which already
;                    know the tech.
; "Normal Players" - Technology cost is reduced depending on the number of
;                    normal players (human and AI) which already know the
;                    tech.
tech_leakage            = "None"

; Method of paying tech upkeep
; "None"   - no upkeep
; "Basic"  - <Cost> / tech_upkeep_divider - tech_upkeep_free
; "Cities" - like "Basic", but multiplied by number of cities
tech_upkeep_style       = "None"
tech_upkeep_divider     = 2000

; Method of selecting techs given for free
; "Goal"     - Towards player`s goal, random if no goal
; "Random"   - Random researchable tech
; "Cheapest" - Cheapest researchable tech, random among equal cost ones
free_tech_method        = "Goal"

[calendar]
start_year              = -4000
skip_year_0             = FALSE
fragments               = 0
positive_label          = _("CE")
negative_label          = _("BCE")

[disasters]
; /* <-- avoid gettext warnings
;
; Disaster types:
; name                    = translatable name as seen by user
; reqs                    = requirements for disaster to happen
; frequency               = how likely disaster is to occur
; effects
;   - "DestroyBuilding"   = Random building is destroyed
;   - "ReducePopulation"  = Reduce city size by one unless it's already 1
;   - "ReducePopDestroy"  = Reduce city size by one (new in 2.6)
;   - "EmptyFoodStock"    = Remove all food from food stock
;   - "EmptyProdStock"    = Destroy current production
;   - "Pollution"         = One tile surrounding city polluted
;   - "Fallout"           = One tile surrounding city polluted with fallout
;
; */ <-- avoid gettext warnings

[disaster_earthquake_floor]
name            = _("Earthquake")
frequency       = 10
effects         = "DestroyBuilding"
reqs            =
 { "type",      "name",                 "range"
   "Terrain",   "Deep Ocean",           "Adjacent"
 }

[disaster_earthquake_mountains]
name            = _("Earthquake")
frequency       = 10
effects         = "DestroyBuilding"
reqs            =
 { "type",      "name",                 "range"
   "Terrain",   "Mountains",            "Adjacent"
 }

[disaster_pestilence]
name            = _("Pestilence")
frequency       = 10
effects         = "ReducePopulation"

[disaster_fire]
name            = _("Fire")
frequency       = 10
effects         = "DestroyBuilding"

[disaster_flood_river]
name            = _("Flood")
reqs            =
 { "type",      "name",                 "range"
   "Extra",     "River",                "City"
 }
frequency       = 10
effects         = "EmptyFoodStock"

[disaster_flood_ocean]
name            = _("Flood")
reqs            =
 { "type",      "name",                 "range"
   "TerrainClass", "Oceanic",           "Adjacent"
 }
frequency       = 10
effects         = "EmptyFoodStock"

[disaster_industrial_accident]
name            = _("Industrial Accident")
reqs            =
 { "type",      "name",                 "range"
   "Building",  "Mfg. Plant",           "City"
 }
frequency       = 10
effects         = "ReducePopulation", "Pollution"

[disaster_nuclear_accident]
name            = _("Nuclear Accident")
reqs            =
 { "type",      "name",                 "range"
   "Building",  "Nuclear Plant",        "City"
 }
frequency       = 10
effects         = "ReducePopDestroy", "Fallout"

[trade]
; "type"       - IN = international, IC = intercontinental
;                (new in 2.6: IN is not National/Team/Ally/Enemy)
; "pct"        - Trade income %. If this is 0, trade route cannot be
;                established at all
; "cancelling" - What to do to previously established traderoutes when they
;                turn illegal
;                "Active"   - Keep them active (although they will only
;                             provide nonzero income if illegal due to
;                             trademindist rather than pct==0)
;                "Inactive" - Keep them inactive
;                "Cancel"   - Cancel them altogether
; "bonus"      - One-time bonuses granted when traderoute established
;                "None"     - No one-time bonus
;                "Gold"     - Bonus to gold
;                "Science"  - Bonus to research
;                "Both"     - Bonus to gold and research

settings =
 { "type",      "pct",  "cancelling",   "bonus"
   "National",    100,  "Cancel",       "Both"  ; 3/3, classic: 100
   "Team",        133,  "Cancel",       "Both"  ; 4/3, classic: 200
   "Ally",        133,  "Cancel",       "Both"  ; 4/3, classic: 200
   "Enemy",       133,  "Cancel",       "Both"  ; 4/3, classic: 200
   "IN",          133,  "Cancel",       "Both"  ; 4/3, classic: 200
; intercontinental (IC)
   "NationalIC",  167,  "Cancel",       "Both"  ; 5/3, classic: 200
   "TeamIC",      200,  "Cancel",       "Both"  ; 6/3, classic: 400
   "AllyIC",      200,  "Cancel",       "Both"  ; 6/3, classic: 400
   "EnemyIC",     200,  "Cancel",       "Both"  ; 6/3, classic: 400
   "INIC",        200,  "Cancel",       "Both"  ; 6/3, classic: 400
 }

[playercolors]
background.r    = 86
background.g    = 86
background.b    = 86

; Player colors for 32 players are defined below.
; Avoid greens, blues, and white / very pale colors (too easy to confuse
; with terrain).
; Avoid dark colors.
colorlist       =
 { "r", "g", "b"        ; x11
   255,   0,   0        ; red
   255, 255,   0        ; yellow
     0, 255, 255        ; cyan
   138,  43, 226        ; blueviolet
   255, 165,   0        ; orange
   255,   0, 255        ; magenta
   173, 216, 230        ; lightblue
     0, 255, 127        ; springgreen
   250, 128, 114        ; salmon
   124, 252,   0        ; lawngreen
   139,   0,   0        ; darkred
   255, 192, 203        ; pink
   211, 211, 211        ; lightgrey
   218, 112, 214        ; orchid
   255,  20, 147        ; deeppink
   100, 149, 237        ; cornflowerblue
   255, 215,   0        ; gold
   245, 222, 179        ; wheat
   255, 255, 128
   192, 255, 128
   204, 255,   0
   255, 211, 140
   255,  79,   0
   240, 145, 169
   255, 219,  88
   153,  17, 153
   184, 134,  11        ; darkgoldenrod
   255, 102,   0
   102, 205, 170
   195,  33,  72
   168, 153, 230
   255, 250, 205        ; lemonchiffon
 }

[teams]
; freeciv optional team names definition.
;
; name =
; _("Team 0"),
; _("Team 1"),
; _("Team 2"),
; _("Team 3"),
; etc...

[settings]
set             =
 { "name",                             "value", "lock"
   "savepalace",                        FALSE ,  TRUE
; --------------------- mapgen ----------------------
   "mapsize",                         "XYSIZE", FALSE
   "xsize",                                64 , FALSE
   "ysize",                                72 , FALSE
   "tilesperplayer",                      200 , FALSE
   "topology",               "WRAPX|WRAPY|ISO", FALSE
   "separatepoles",                     FALSE , FALSE
   "tinyisles",                          TRUE , FALSE
   "temperature",                          44 , FALSE
   "landmass",                             33 , FALSE
   "steepness",                            33 , FALSE
   "wetness",                              44 , FALSE
   "flatpoles",                             0 , FALSE
   "huts",                                 15 , FALSE
; --------------------- game ------------------------
   "aifill",                                8 , FALSE
   "dispersion",                            2 , FALSE
   "nationset",                          "all", FALSE
   "startpos",                        "SINGLE", FALSE
   "startunits",                       "kcccc", FALSE
   "traitdistribution",                 "EVEN", FALSE
; --------------------- sociological ----------------
   "citymindist",                           3 , FALSE
   "citynames",                  "NO_STEALING", FALSE
   "civilwarsize",                         10 , FALSE
   "disasters",                            22 , FALSE
   "endturn",                             600 , FALSE
   "migration",                          TRUE , FALSE
   "mgr_distance",                          3 , FALSE
   "mgr_nationchance",                     66 , FALSE
   "mgr_worldchance",                      22 , FALSE
; --------------------- military --------------------
   "airliftingstyle",  "FROM_ALLIES|TO_ALLIES", FALSE
; --------------------- internal --------------------
   "compresstype",                     "PLAIN", FALSE
   "ec_turns",                              0 , FALSE
   "savename",              "radius26-%03T-%R", FALSE
   "victories",     "SPACERACE|ALLIED|CULTURE", FALSE
 }

