# this file is included by the radius/terrain.ruleset

[extraui]

; Player visible names of the base gui types.
ui_name_base_fortress   = _("?gui_type:Build Fortress/Buoy/Marina")
ui_name_base_airbase    = _("?gui_type:Build Airbase")

[extras]
;-------------------------------------------------------------------------- /*
; Each terrain extra xyz is defined in a unique [extra_xyz] section below,
; and the tag xyz may be used in debug output.  Entries for extras:
;
; name                  = \/ Same idea as for [terrains] and [resources],
; rule_name             = /\ the graphics can be extra.xyz tilespec tags.
; category              = How UI should categorize this extra. One of
;                         "Infra", "Natural", "Nuisance", or "Bonus"
; causes                = "Irrigation", "Mine", "Hut", "Pollution", "Fallout",
;                         "Base", or "Road"
; rmcauses              = "CleanPollution", "CleanFallout", or "Pillage"
; graphic               = \/ Same idea as for [terrains] and [resources],
; graphic_alt           = /\ the graphics can be extra.xyz tilespec tags.
; activity_gfx          = tag specifying graphic for unit building extra
; act_gfx_alt           = tag for alternative graphic
; act_gfx_alt2          = tag for second alternative graphic
; reqs                  = requirements to build the extra, see README.effects
; buildable             = Can extra be built? Defaults to TRUE
; build_time            = how long it takes a unit to build this extra.
;                         Value of 0 (default) means that terrain- and
;                         build activity specific time is used instead.
; build_time_factor     = This setting takes effect only if build_time is 0.
;                         Terrain and activity specific build time will be
;                         multiplied by this value (default 1)
; rmreqs                = requirements to remove the extra
; rmact_gfx             = tag specifying graphic for unit removing extra;
;                         can be "None" if not needed
; rmact_gfx_alt         = tag for alternative graphic
; removal_time          = \/ same idea as for build_time
; removal_time_factor   = /\ same idea as for build_time_factor
; defense_bonus         = Percent added to defense; default 0 (no bonus).
; helptext              = optional help text string; should escape all raw
;                         newlines so that xgettext parsing works.
; native_to             = List of unit classes that are considered to be in
;                         the extra when they are on its tile, e.g., a Marina
;                         could be native_to unit class Sea, but this also
;                         requires an extra flag "NativeTile"
; conflicts             = List of extras that cannot be on the same tile.
;                         Bases with a non-zero border_sq automatically
;                         conflict with each other
; hidden_by             = List of extra types that will make this extra
;                         type not to show on UI if both present.
; flags                 = comma-separated strings (default FALSE for empty):
; - "AlwaysOnCityCenter"  City center tiles always have this base type
;                         regardless of its other requirements
; - "AutoOnCityCenter"    City center tiles will automatically have this
;                         base type if the player can build it
; - "NativeTile"          Native units consider tile native regardless of
;                         terrain
; - "DiplomatDefense"     Diplomats inside get bonus to diplomatic defense
; - "ShowFlag"            Draw owner's flag
; - "Refuel"            = Native units can use tile as refuel point
; - "TerrChangeRemoves" = Extra gets removed when ever terrain changes even
;                         if target terrain could support it
; - "ConnectLand"       = Road style gfx on Oceanic tiles are drawn to
;                         connect to adjacent Land tiles even if they have
;                         no extra. This affects appearance only
; - "GlobalWarming"     = Instances of this extra on map count towards
;                         Global Warming
; - "NuclearWinter"     = Instances of this extra on map count towards
;                         Nuclear Winter
; - "NaturalDefense"    = Extra's defense bonus will be counted to "Natural"
;                         defense layer. The defense bonus of all the extras
;                         located at the tile, native to defending unit,
;                         is calculated as 1 + sum of bonuses from the extras
;                         on the default "Fortification" defense layer
;                         multiplied by 1 + sum of bonuses from the extras on
;                         the "Natural" layer.
;-------------------------------------------------------------------------- */

[extra_irrigation]
name                    = _("Irrigation")
category                = "Infra"
causes                  = "Irrigation"
rmcauses                = "Pillage"
graphic                 = "tx.irrigation"
graphic_alt             = "-"
activity_gfx            = "unit.irrigation"
act_gfx_alt             = "unit.irrigate"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
build_time              = 0
removal_time            = 0
conflicts               = "Mine", "Oil Well"
hidden_by               = "Farmland"
helptext                = _("\
Building an irrigation system on a suitable tile causes it to \
produce one extra food each turn. This requires a nearby source of \
water: an ocean, lake, or river tile, or another tile with an \
irrigation system, must share an edge (not just a corner) with the \
target tile. However, once irrigated, land remains so even if the \
water source is removed.\
"), _("\
Building irrigation on a tile with a mine or oil well will destroy it.\
"), _("\
City center tiles get their terrain's irrigation bonus automatically, \
if there is no conflicting mine or oil well on the tile; however, \
this does not make cities count as a water source for further \
irrigation. Irrigation can be built on the city tile simply to allow \
building further irrigation elsewhere, but will not give the tile any \
further bonus.\
")

[extra_farmland]
name                    = _("Farmland")
category                = "Infra"
causes                  = "Irrigation"
rmcauses                = "Pillage"
graphic                 = "tx.farmland"
graphic_alt             = "-"
activity_gfx            = "unit.farmland"
act_gfx_alt             = "unit.irrigation"
act_gfx_alt2            = "unit.irrigate"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range"
   "Tech",      "Refrigeration",        "Player"
   "Extra",     "Irrigation",           "Local"
 }
build_time              = 0
removal_time            = 0
conflicts               = "Mine", "Oil Well"
; /* xgettext:no-c-format */
helptext                = _("\
Once Refrigeration is known, irrigation systems can be upgraded to \
farmland by irrigating them a second time; if the city working the tile \
has a Supermarket, a farmland tile provides 50% more food.\
"), _("\
Like irrigation, farmland is incompatible with mines and oil wells.\
")

[extra_mine]
name                    = _("Mine")
category                = "Infra"
causes                  = "Mine"
rmcauses                = "Pillage"
graphic                 = "tx.mine"
graphic_alt             = "-"
activity_gfx            = "unit.mine"
act_gfx_alt             = "unit.plant"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "TerrainFlag", "Oil",                "Local",  FALSE
 }
build_time              = 0
removal_time            = 0
conflicts               = "Irrigation", "Farmland"
helptext                = _("\
Mines can be built on some types of terrain, which increases the \
number of production points produced by that tile. Hills get an extra \
3 production points per tile; other terrains get 1 extra production \
point.\
"), _("\
Building a mine on an irrigated tile will destroy the irrigation.\
")

[extra_oil_well]
name                    = _("Oil Well")
category                = "Infra"
causes                  = "Mine"
rmcauses                = "Pillage"
graphic                 = "tx.oil_mine"
graphic_alt             = "tx.mine"
activity_gfx            = "unit.oil_mine"
act_gfx_alt             = "unit.mine"
act_gfx_alt2            = "unit.plant"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range"
   "TerrainFlag", "Oil",                "Local"
 }
build_time              = 0
removal_time            = 0
conflicts               = "Irrigation", "Farmland"
helptext                = _("\
Oil wells behave like mines (giving an extra production point), but \
require more technology. Oil wells can be built on Desert with knowledge \
of Construction, and on Glacier with knowledge of Refining.\
"), _("\
Building an oil well on an irrigated tile will destroy the irrigation.\
")

[extra_pollution]
name                    = _("Pollution")
category                = "Nuisance"
causes                  = "Pollution"
rmcauses                = "CleanPollution"
graphic                 = "tx.pollution"
graphic_alt             = "-"
activity_gfx            = "unit.road"   ; unused, cannot be built
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pollution"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "TerrainFlag", "NoPollution",        "Local",  FALSE
 }
removal_time            = 0
flags                   = "GlobalWarming"
helptext                = _("\
Pollution appears on land tiles around cities with high production or \
population, or when a Mfg. Plant suffers an industrial accident. \
It halves all output from its tile, and contributes to the risk of \
global warming.\
"), _("\
The pollution can only be cleared by dispatching Workers, \
Settlers, or Engineers with the \"clean pollution\" order.\
"), _("\
Pollution from production is likely to start becoming important as \
your civilization becomes more industrialized, giving you buildings \
such as Factory and Power Plant which boost production. Replacing a \
Power Plant with cleaner forms of energy -- a Hydro Plant / Hoover \
Dam, Nuclear Plant, or Solar Plant -- will reduce pollution from \
production, as will a Recycling Center.\
"), _("\
The city's population starts adding to pollution with the discovery of \
Industrialization, and Automobile, Mass Production, and Plastics make \
this worse. Building a Mass Transit in a city eliminates the \
population's contribution to pollution.\
"), _("\
The contribution of these factors can be seen in the city dialog; once \
it exceeds a threshold, the excess is the percent chance of pollution \
appearing each turn.\
"), _("\
When an unused tile becomes polluted, there is the temptation to avoid \
the effort of cleaning it; but the spread of pollution has far more \
terrible results than the immediate economic impact -- every polluted \
tile increases the chance of global warming. Each time global warming \
advances, the entire world loses coastal land to the sea and to jungles \
and swamps, and inland tiles are lost to desert. This tends to \
devastate cities and leads to global impoverishment.\
"), _("\
The risk of global warming is cumulative; the longer polluted tiles \
are left uncleaned, the higher the risk becomes, and the risk can \
linger for some time even after all pollution has been cleaned. If a \
long time passes with an elevated risk of warming, its effects will be \
all the more severe when it does occur.\
")

[extra_fallout]
name                    = _("Fallout")
category                = "Nuisance"
causes                  = "Fallout"
rmcauses                = "CleanFallout"
graphic                 = "tx.fallout"
graphic_alt             = "-"
activity_gfx            = "unit.road"   ; unused, cannot be built
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.fallout"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "TerrainFlag", "NoPollution",        "Local",  FALSE
 }
removal_time            = 0
flags                   = "NuclearWinter"
helptext                = _("\
Nuclear fallout can appear on land tiles when a Nuclear unit is \
detonated, or when a city's Nuclear Plant has an accident. It halves \
all output from its tile.\
"), _("\
Every tile with nuclear fallout also increases the risk of global \
nuclear winter. If nuclear winter occurs, land across the globe \
changes into desert, tundra, and ice, and lakes and oceans freeze.\
"), _("\
Settlers, Workers, and Engineers can clean up nuclear fallout.\
")

[extra_hut]
name                    = _("Minor Tribe Village")
rule_name               = "Hut"
category                = "Bonus"
causes                  = "Hut"
rmcauses                = FALSE
graphic                 = "tx.village"
graphic_alt             = "-"
activity_gfx            = "unit.road"   ; unused, cannot be built
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"; unused, cannot be pillaged
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range"
   "TerrainClass", "Land",              "Local"
 }
helptext                = _("\
Villages (also called \"huts\") are primitive communities spread \
across the world at the beginning of the game. Any land unit can enter \
a village, making the village disappear and deliver a random response. \
If the village proves hostile, it could produce barbarians or the unit \
entering may simply be destroyed. If they are friendly, the player \
could receive gold, a new technology, a military unit (occasionally a \
settler; and sometimes a unit that the player cannot yet create), or \
even a new city.\
"), _("\
Later in the game, helicopters may also enter villages, but overflight \
by other aircraft will cause the villagers to take fright and disband.\
")

[extra_fortress]
name                    = _("Fortress")
category                = "Infra"
causes                  = "Base"
rmcauses                = "Pillage"
graphic                 = "base.fortress"
graphic_alt             = "-"
activity_gfx            = "unit.fortress"
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "Tech",      "Construction",         "Player", TRUE
   "TerrainClass", "Land",              "Local",  TRUE
   "UnitFlag",  "Settlers",             "Local",  TRUE
   "CityTile",  "Center",               "Local",  FALSE
 }
rmreqs                  =
 { "type",      "name",                 "range", "present"
   "Extra",     "Marina",               "Local",  FALSE
 }
build_time              = 0
defense_bonus           = 100
border_sq               = 5
native_to               = "Land", "Civilian"
helptext                = _("\
Fortresses improve defense for land units. Among other effects, a land \
unit remaining in a fortress for a whole turn without moving recovers \
a quarter of its hit points. With Invention, fortresses gain watchtowers \
from which units can see further afield.\
")

[extra_airbase]
name                    = _("Airbase")
category                = "Infra"
causes                  = "Base"
rmcauses                = "Pillage"
graphic                 = "base.airbase"
graphic_alt             = "-"
activity_gfx            = "unit.airbase"
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "Tech",      "Radio",                "Player", TRUE
   "TerrainClass", "Land",              "Local",  TRUE
   "UnitFlag",  "Airbase",              "Local",  TRUE
   "CityTile",  "Center",               "Local",  FALSE
 }
build_time              = 3
native_to               = "Air", "Helicopter", "Missile"
flags                   = "Refuel"
conflicts               = "Marina"
helptext                = _("\
Airbases allow your air units to land and refuel. Air units in an \
airbase may be attacked by land units.\
")

[extra_buoy]
name                    = _("Buoy")
category                = "Infra"
causes                  = "Base"
rmcauses                = "Pillage"
graphic                 = "base.buoy"
graphic_alt             = "base.fortress"
activity_gfx            = "unit.buoy"
act_gfx_alt             = "unit.fortress"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "Tech",      "Radio",                "Player", TRUE
   "TerrainClass", "Oceanic",           "Local",  TRUE
   "Terrain",   "Deep Ocean",           "Local",  FALSE
   "UnitFlag",  "Airbase",              "Local",  TRUE
   "CityTile",  "Center",               "Local",  FALSE
   "Resource",  "Fish",                 "Local",  FALSE
   "Resource",  "Whales",               "Local",  FALSE
 }
build_time              = 3
helptext                = _("\
Buoys may be built in the ocean (by units on a sea-going vessel) to \
allow their owner to see the surrounding tiles.\
"), _("\
Buoys cannot be built in Deep Ocean, or on tiles with Fish / Whales.\
")

[extra_marina]
name                    = _("Marina")
category                = "Infra"
causes                  = "Base"
rmcauses                = "Pillage"
graphic                 = "base.marina"
graphic_alt             = "base.buoy"
activity_gfx            = "unit.marina"
act_gfx_alt             = "unit.buoy"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "Tech",      "Amphibious Warfare",   "Player", TRUE
   "Extra",     "Fortress",             "Local",  TRUE
   "TerrainClass", "Oceanic",         "Adjacent", TRUE
   "UnitFlag",  "Airbase",              "Local",  TRUE
   "CityTile",  "Center",               "Local",  FALSE
 }
build_time              = 3
native_to               = "Sea", "Trireme"
conflicts               = "Airbase"
flags                   = "NativeTile"
helptext                = _("\
Marinas add a port facility to an existing fortress and require an\
 adjacent lake or ocean.  Among other effects, a sea unit remaining\
 in a marina for a whole turn without moving recovers a quarter of\
 its hit points (same idea as for land units in a fortress).  Sea\
 units in a marina may be attacked by land units.\
")

[extra_ruins]
name                    = _("Ruins")
category                = "Nuisance"
causes                  = "Base"
rmcauses                = "Pillage"
graphic                 = "base.ruins"
graphic_alt             = "-"
activity_gfx            = "unit.road"   ; unused, cannot be built
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "TerrainClass", "Land",              "Local",  TRUE
   "CityTile",  "Center",               "Local",  FALSE
 }
buildable               = FALSE
build_time              = 0
flags                   = "TerrChangeRemoves"
helptext                = _("\
Ruins mark the former site of a city that was destroyed or abandoned. \
They have no effect on gameplay.\
")

[extra_road]
name                    = _("Road")
category                = "Infra"
causes                  = "Road"
rmcauses                = "Pillage"
graphic                 = "road.road"
graphic_alt             = "-"
activity_gfx            = "unit.road"
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "UnitFlag",  "Settlers",             "Local",  TRUE
   "TerrainClass", "Land",              "Local",  TRUE
 }
native_to               = "Land", "Civilian"
hidden_by               = "Tramway", "Railroad"
flags                   = "NativeTile", "AutoOnCityCenter"
helptext                = _("\
Roads allow your land units to move more quickly, and on some terrain,\
 also provide a trade bonus.\
"), _("\
Building roads on river tiles requires knowledge of Bridge Building.\
 City center tiles automatically get roads (unless they are on a river\
 tile and you do not yet know Bridge Building).\
")

[extra_tram]
name                    = _("Tramway")
category                = "Infra"
causes                  = "Road"
rmcauses                = "Pillage"
graphic                 = "road.rail"
graphic_alt             = "-"
activity_gfx            = "unit.rail"
act_gfx_alt             = "unit.road"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "Tech",      "Railroad",             "Player", TRUE
   "Extra",     "Road",                 "Local",  TRUE
   "UnitFlag",  "Airbase",              "Local",  TRUE
   "TerrainClass", "Land",              "Local",  TRUE
 }
native_to               = "Land", "Civilian"
hidden_by               = "Railroad"
flags                   = "NativeTile", "AutoOnCityCenter"
helptext                = _("\
Once you learn the Railway technology, you may upgrade your roads\
 to tramways.  Units travel twice as fast along tramways than along\
 roads, but only half as fast as on railroads.\
"), _("\
City center tiles with roads are automatically upgraded to tramways\
 when you learn the Railway technology.\
"), _("\
A tramway increases any shield resources produced by a tile, and\
 retains any trade bonus from the road as well.\
")

[extra_railroad]
name                    = _("Railroad")
category                = "Infra"
causes                  = "Road"
rmcauses                = "Pillage"
graphic                 = "road.maglev"
graphic_alt             = "road.rail"
activity_gfx            = "unit.maglev"
act_gfx_alt             = "unit.road"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"
rmact_gfx_alt           = "-"
reqs                    =
 { "type",      "name",                 "range", "present"
   "Tech",      "Railroad",             "Player", TRUE
   "Extra",     "Tramway",              "Local",  TRUE
   "UnitFlag",  "Transform",            "Local",  TRUE
   "TerrainClass", "Land",              "Local",  TRUE
 }
native_to               = "Land", "Civilian"
flags                   = "NativeTile"
helptext                = _("\
Once you learn the Railway technology, you may upgrade your roads\
 to tramways, and tramways to railroads.  Units travel faster along\
 railroads than along tramways.\
"), _("\
A railroad rounds up any shield bonus from 3+1.5 to 5, or a gold\
 trade bonus from 5+2.5 to 8, keeping gold + river (5+1)+3 as is.\
")

[extra_river]
name                    = _("River")
category                = "Natural"
causes                  = "Road"
rmcauses                = FALSE
graphic                 = "road.river"
graphic_alt             = "-"
activity_gfx            = "unit.road"   ; unused, cannot be built
act_gfx_alt             = "-"
act_gfx_alt2            = "-"
rmact_gfx               = "unit.pillage"; unused, cannot be pillaged
rmact_gfx_alt           = "-"
buildable               = FALSE
defense_bonus           = 50
native_to               = "Land", "Civilian", "Trireme"
flags                   = "NativeTile"
; /* xgettext:no-c-format */
helptext                = _("\
Any land terrain type may have a River on it.  A River adds 1\
 trade to the resources produced by that tile.  It also increases a tile's\
 defense factor by 50%.  Land units and Trirememes may move along a River\
 for fast travel.\
"), _("\
Roads, tramways and railroads can only be built on River tiles if your\
 civilization has learned the Bridge Building technology.\
")

